{"version":3,"sources":["src/script/net.ts","src/script/style.diagonal.ts","src/script/style.vertical.ts","src/script/util.ts","src/script/app.ts"],"names":[],"mappings":"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","file":"app.b8913cbb.js","sourceRoot":"..","sourcesContent":["export function getJSON<T>(uri: string, method: string = \"GET\", body: Document | BodyInit | null = null): Promise<T> {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(method, uri);\r\n    return new Promise((resolve, reject) => {\r\n        xhr.onerror = (ev) => {\r\n            reject(ev);\r\n        }\r\n        xhr.onload = (ev) => {\r\n            resolve(JSON.parse(xhr.responseText) as T);\r\n        }\r\n        xhr.send(body);\r\n    });\r\n}\r\n","export function Style(linkspace: HTMLUListElement) {\r\n    const calculateOffset = () => {\r\n        if(document.documentElement.clientWidth > 1200) {\r\n            linkspace.style.marginLeft = `${0.272 * (window.scrollY)}pt`;\r\n        } else {\r\n            linkspace.style.marginLeft = \"0pt\";\r\n        }\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", calculateOffset);\r\n    window.addEventListener(\"resize\", calculateOffset);\r\n    calculateOffset();\r\n}\r\n","export function Style(linkspace: HTMLUListElement) {\r\n}\r\n","/// <reference path=\"chomp.d.ts\"/>\r\n\r\nexport function pxToPt(px : number) : number {\r\n    return px * 3 / 4;\r\n}\r\n\r\nexport function ptToPx(pt : number) : number {\r\n    return pt * 4 / 3;\r\n}\r\n\r\nexport function probability(chance: number, runs: number) : number {\r\n    return 1 - Math.pow((1 - chance), runs);\r\n}\r\n\r\nexport function description(data: string | Array<ChompDescriptionElement>, host: Element) {\r\n    if(!Array.isArray(data)) {\r\n        host.textContent = data;\r\n        return;\r\n    }\r\n    for (const elementData of data) {\r\n        const element = document.createElement(elementData.tag);\r\n        if(elementData.attributes != null) { \r\n            for(const attributeKey in elementData.attributes) {\r\n                const attr = document.createAttribute(attributeKey);\r\n                attr.value = elementData.attributes[attributeKey];\r\n                element.attributes.setNamedItem(attr);\r\n            }\r\n        }\r\n        description(elementData.text, element);\r\n        host.appendChild(element);\r\n    }\r\n}\r\n\r\nexport function hex2hsl(hex: string) : Array<number> {\r\n    const color = parseInt(hex.startsWith(\"#\") ? hex.substr(1) : hex, 16);\r\n    const r = (color >> 16) / 0xFF;\r\n    const g = ((color >> 8) & 0xFF) / 0xFF;\r\n    const b = (color & 0xFF) / 0xFF;\r\n    const max = Math.max(r, g, b);\r\n    const min = Math.min(r, g, b);\r\n    let h = (max + min) / 2;\r\n    let s = h;\r\n    let l = h;\r\n\r\n    if (max == min) {\r\n        h = s = 0; // achromatic\r\n    } else {\r\n        var d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n        case r:\r\n            h = (g - b) / d + (g < b ? 6 : 0);\r\n            break;\r\n        case g:\r\n            h = (b - r) / d + 2;\r\n            break;\r\n        case b:\r\n            h = (r - g) / d + 4;\r\n            break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return [Math.floor(h * 360), Math.floor(s * 100), Math.floor(l * 100)];\r\n}\r\n\r\nexport function hslShift(color: string, adjH: number, adjS: number, adjL: number) : string {\r\n    const hsl = hex2hsl(color);\r\n    hsl[0] = (hsl[0] + adjH) % 360;\r\n    hsl[1] = Math.min(100, hsl[1] + adjS);\r\n    hsl[2] = Math.min(100, hsl[2] * adjL);\r\n    return `hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%)`;\r\n}\r\n\r\nexport function hslSetL(color: string, adjH: number, adjS: number, adjL: number) : string {\r\n    const hsl = hex2hsl(color);\r\n    hsl[0] = (hsl[0] + adjH) % 360;\r\n    hsl[1] = Math.min(100, hsl[1] + adjS);\r\n    hsl[2] = adjL\r\n    return `hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%)`;\r\n}\r\n","/// <reference path=\"chomp.d.ts\"/>\r\n\r\nimport { getJSON } from \"./net\";\r\nimport { Style as DiagonalStyle } from \"./style.diagonal\";\r\nimport { Style as VerticalStyle } from \"./style.vertical\";\r\nimport { description, hslShift, hex2hsl, hslSetL } from \"./util\";\r\n\r\nconst styles = {\r\n    \"diagonal\": DiagonalStyle,\r\n    \"vertical\": VerticalStyle\r\n}\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n    (async () => {\r\n        const data = await getJSON<ChompData>(\"/chomp.json\");\r\n        if(location.search.length > 1 && location.search.substr(1) in styles) {\r\n            data.style = location.search.substr(1);\r\n        }\r\n        const $ = (query) : NodeListOf<Element> => document.body.querySelectorAll(query);\r\n        const $$ = (query) : Element => document.body.querySelector(query);\r\n        \r\n        $$(\"header span\").textContent = data.name;\r\n        description(data.description, $$(\"nav\"));\r\n\r\n        const linkspace = $$(\".linkspace\") as HTMLUListElement;\r\n        const template = $$(\".linkspace #link-template\") as HTMLTemplateElement;\r\n        const separator = $$(\".linkspace #link-separator\") as HTMLTemplateElement;\r\n        const header = $$(\".linkspace #link-header\") as HTMLTemplateElement;\r\n        for(var entry of data.entries) {\r\n            if(entry.isHidden) continue;\r\n\r\n            if(entry.isSeparator == true) {\r\n                linkspace.appendChild(document.importNode(separator.content, true));\r\n            } else if(entry.isHeader == true) {\r\n                let content = header.content;\r\n                let h1 = content.querySelector(\"h1\");\r\n                h1.textContent = entry.name;\r\n                linkspace.appendChild(document.importNode(content, true));\r\n            } else {\r\n                let content = template.content;\r\n                let a = content.querySelector(\"a\");\r\n                let aspan = content.querySelector(\"#link-template-text\") as HTMLSpanElement;\r\n                let span = content.querySelector(\"#link-template-description\") as HTMLSpanElement;\r\n\r\n                a.href = (entry.href.startsWith(\"https://\") || entry.href.startsWith(\"/\")) ? entry.href : `https://github.com/${entry.href}`;\r\n                a.title = entry.sling;\r\n                aspan.textContent = entry.name;\r\n                a.style.setProperty(\"--project-link-color-start\", entry.color[0]);\r\n                a.style.setProperty(\"--project-link-color-end\", entry.color[1]);\r\n                const adjust = entry.colorAdjust ?? 1.3;\r\n                a.style.setProperty(\"--project-link-color-hover\", entry.color[2] ?? hslShift(entry.color[1], 0, 100, adjust));\r\n                const hsl = hex2hsl(entry.color[2] ?? entry.color[1]); \r\n                a.style.setProperty(\"--project-link-color-hover2\", entry.color[3] ?? hslSetL(entry.color[0], 0, 100, hsl[2] * adjust));\r\n                span.textContent = entry.description;\r\n                span.style.color = entry.color[0];\r\n\r\n                linkspace.appendChild(document.importNode(content, true));\r\n            }\r\n        }\r\n\r\n        const adjustSize = () => {\r\n            linkspace.style.marginTop = `${$$(\"header\").clientHeight - 15}px`;\r\n        };\r\n        window.addEventListener(\"resize\", adjustSize);\r\n        adjustSize();\r\n\r\n        document.body.classList.add(`style-${data.style}`);\r\n        styles[data.style](linkspace);\r\n    })().then(() => console.log(\"Initialized.\"), (e) => console.error(\"Error during initialization\", e));\r\n});\r\n\r\n\r\n"]}